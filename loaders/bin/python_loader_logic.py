# read file from first argument
import inspect
import sys
import importlib.util
from os import system
from pathlib import Path

file = sys.argv[1]
output_path = sys.argv[2]
print(f"Loading {file} and writing to {output_path}")
print(f"Reading file {file}")

# import file as modukle

spec = importlib.util.spec_from_file_location("module.name", file)
foo = importlib.util.module_from_spec(spec)
spec.loader.exec_module(foo)

# get all functions in module
functions = [fun for fun in inspect.getmembers(foo, inspect.isfunction) if
             not fun[0].startswith("_") and not fun[1].__module__.startswith("builtins")]

print(functions)
output_path = sys.argv[2]
# write sh file for each function
for function in functions:
    function_name = function[0]
    print(function)
    Path(output_path).mkdir(parents=True, exist_ok=True)
    with open(f"{output_path}/{function_name}", "w") as f:
        f.write(
            f"""\
#!/bin/bash
# This file was generated by WRAP
cd {Path(file).parent}
python3 -c "
from sys import argv
from {file.split('/')[-1].removesuffix(".py")} import *
{function_name}(*argv[1:])
" $@
""")
    # chmod
    system(f"chmod +x {output_path}/{function_name}")
# print(dir(file))
# print(inspect.getmembers(file, predicate=inspect.isfunction))
